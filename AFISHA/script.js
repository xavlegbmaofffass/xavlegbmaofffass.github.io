document.addEventListener("DOMContentLoaded", () => {
  const eventList = document.querySelector(".event-list");
  const categoryItems = document.querySelectorAll(".category-item");
  const categoryButton = document.querySelector(".filter-button span");

  fetch("./events.xml")
    .then((response) => response.text())
    .then((str) => new window.DOMParser().parseFromString(str, "text/xml"))
    .then((data) => {
      const events = data.querySelectorAll("event");

      events.forEach((event) => {
        const id = event.querySelector("id").textContent;
        const title = event.querySelector("title").textContent;
        const date = event.querySelector("date").textContent;
        const location = event.querySelector("location").textContent;
        const price = event.querySelector("price").textContent;
        const poster = event.querySelector("poster").textContent;
        const category = event.getAttribute("category");

        const card = document.createElement("div");
        card.classList.add("event-card");
        card.setAttribute("data-category", category);

        card.innerHTML = `
          <img src="${poster}" alt="${title}" class="event-poster">
          <div class="event-info">
            <h3 class="event-title">${title}</h3>
            <p class="event-date">üìÖ ${date}</p>
            <p class="event-location">üìç ${location}</p>
            <p class="event-price">üí∏ ${price}</p>
            <a href="/BRON/booking.html?id=${id}" class="buy-btn">–ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç</a>
          </div>
        `;

        eventList.appendChild(card);
      });

      categoryItems.forEach((item) => {
        item.addEventListener("click", function () {
          const selectedCategory = this.getAttribute("data-category");
          const allCards = document.querySelectorAll(".event-card");

          console.log("–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è:", selectedCategory); // –õ–æ–≥–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é

          categoryItems.forEach((i) => i.classList.remove("active"));
          this.classList.add("active");

          if (selectedCategory === "all") {
            categoryButton.textContent = "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏";
          } else {
            categoryButton.textContent = this.textContent;
          }

          allCards.forEach((card) => {
            const cardCategory = card.getAttribute("data-category");
            console.log("–ö–∞—Ä—Ç–æ—á–∫–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π:", cardCategory);

            // –î–æ–±–∞–≤–ª—è–µ–º/—É–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å .hidden –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è/–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫
            if (selectedCategory === "all" || cardCategory === selectedCategory) {
              card.classList.remove("hidden");
              console.log("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É:", card);
            } else {
              card.classList.add("hidden");
              console.log("–°–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É:", card);
            }
          });
        });
      });
    })
    .catch((error) => {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ XML:", error);
    });
});
